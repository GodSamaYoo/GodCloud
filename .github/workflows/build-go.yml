name: Go

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:

  build1:
    runs-on: ubuntu-18.04
    #runs-on: ${{ matrix.os }}
    #strategy:
    #  matrix:
    #    os: [ubuntu-20.04, ubuntu-18.04, ubuntu-16.04]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
        
    - name: dependences
      run: |
        sudo apt-get update
        sudo apt-get install yasm gcc automake autoconf libtool make wget
        sudo apt-get -y install gcc-aarch64-linux-gnu libc6-dev-arm64-cross
#        sudo apt install mingw-w64
        
        
    - name: compile FFmpeg
      run: |
        sudo wget https://github.com/FFmpeg/FFmpeg/archive/n4.3.1.tar.gz
        tar -xzvf n4.3.1.tar.gz
        cd FFmpeg-n4.3.1
        sudo ./configure --prefix=$FFMPEG_HOME --enable-cross-compile --target-os=linux --cross-prefix=aarch64-linux-gnu- --cc=aarch64-linux-gnu-gcc --enable-static --arch=aarch64
        sudo make -j4
        sudo make install

    - name: Build-linux_arm64
      run: |
        GOOS=linux GOARCH=arm64 CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++  go build -o GodCloud_linux_arm64
        
    - name: Upload binary files (linux_arm64)
      uses: actions/upload-artifact@v2
      with:
        name: Build-liunx_arm64
        path: GodCloud_linux_arm64
        
  build2:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
        
    - name: dependences
      run: |
        sudo apt-get update
        sudo apt-get install yasm gcc automake autoconf libtool make wget
        sudo apt install mingw-w64
        
        
    - name: compile FFmpeg
      run: |
        sudo wget https://github.com/FFmpeg/FFmpeg/archive/n4.3.1.tar.gz
        tar -xzvf n4.3.1.tar.gz
        cd FFmpeg-n4.3.1
        sudo ./configure --prefix=$FFMPEG_HOME --enable-cross-compile --target-os=win64 --cross-prefix=x86_64-w64-mingw32- --cc=x86_64-w64-mingw32-gcc --enable-static --arch=x86_64
        sudo make -j4
        sudo make install

    - name: Build-windows_amd64
      run: |
        GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc CXX=x86_64-w64-mingw32-g++  go build -o GodCloud_windows_amd64
        
    - name: Upload binary files (windows_amd64)
      uses: actions/upload-artifact@v2
      with:
        name: Build-windows_amd64
        path: GodCloud_windows_amd64
  
